{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Power Platform REST API",
    "description": "Unified API for all administrative capabilities in Microsoft Power Platform",
    "version": "2021-10-01-preview"
  },
  "host": "api.powerplatform.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/governance/lockboxOperations/validate": {
      "post": {
        "tags": [
          "LockboxOperations"
        ],
        "operationId": "ValidateLockboxOperation",
        "summary": "Validate the Lockbox request .",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The lockbox operation request.",
            "schema": {
              "$ref": "#/definitions/LockboxOperationRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxOperationValidationResult"
            }
          }
        }
      }
    },
    "/governance/lockboxPolicies": {
      "post": {
        "tags": [
          "LockboxPolicies"
        ],
        "operationId": "CreateLockboxPolicy",
        "summary": "Creates Lockbox policy at tenant level or at container level .",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Lockbox Policy model.",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDto"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDto"
            }
          }
        }
      },
      "get": {
        "tags": [
          "LockboxPolicies"
        ],
        "operationId": "ListLockboxPolicies",
        "summary": "Gets the Lockbox policy at tenant level. To get defined container policies\r\nplease refer to \"containerPolicies\" parameter in response body .",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDtoResponseWithOdataContinuation"
            }
          }
        }
      }
    },
    "/governance/lockboxPolicies/{policyId}": {
      "patch": {
        "tags": [
          "LockboxPolicies"
        ],
        "operationId": "UpdateLockboxPolicy",
        "summary": "Updates Lockbox policy at tenant level or at container level .",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "policyId",
            "description": "The policy Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Lockbox Policy model.",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDto"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDto"
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/governance/lockboxContainerPolicies/{containerId}": {
      "get": {
        "tags": [
          "LockboxPolicies"
        ],
        "operationId": "GetLockboxContainerPolicy",
        "summary": "Gets defined/derived container policy for specific container Id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "The Container Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDto"
            }
          }
        }
      }
    },
    "/governance/lockboxContainerPolicies": {
      "get": {
        "tags": [
          "LockboxPolicies"
        ],
        "operationId": "ListLockboxContainerPolicies",
        "summary": "Gets the defined container level Lockbox policies in a tenant.(No container policy returned if Lockbox policy at tenant applies for ALL)\r\nExample usage of top query parameter for policies list : ?$expand=value($top=3;$expand=*) .",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxPolicyDtoResponseWithOdataContinuation"
            }
          }
        }
      }
    },
    "/governance/lockboxRequests": {
      "post": {
        "tags": [
          "LockboxRequests"
        ],
        "operationId": "CreateLockboxRequest",
        "summary": "Creates a Power Platform Lockbox requests for a tenant and Product type.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Lockbox Approval Request.",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDto"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDto"
            }
          }
        }
      },
      "get": {
        "tags": [
          "LockboxRequests"
        ],
        "operationId": "ListLockboxRequests",
        "summary": "Lists the Power Platform Lockbox requests for a tenant and Product Type (can be filtered on Status).\r\nExample usage of top and filter query parameter for requests list : ?$expand=value($top=3;$expand=*;$filter=Status eq 'DenialReceived') .",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDtoResponseWithOdataContinuation"
            }
          }
        }
      }
    },
    "/governance/lockboxContainers/{containerId}/lockboxRequests": {
      "get": {
        "tags": [
          "LockboxRequests"
        ],
        "operationId": "ListLockboxContainerRequests",
        "summary": "Lists the Power Platform Lockbox requests for a container (can be filtered on Status).\r\nExample usage of top and filter query parameter for requests list : ?$expand=value($top=3;$expand=*;$filter=Status eq 'DenialReceived') .",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "The Container Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDtoResponseWithOdataContinuation"
            }
          }
        }
      }
    },
    "/governance/lockboxRequests/{requestId}": {
      "get": {
        "tags": [
          "LockboxRequests"
        ],
        "operationId": "GetLockboxRequest",
        "summary": "Gets the Power Platform Lockbox request.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "path",
            "name": "requestId",
            "description": "The request Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDto"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/governance/lockboxRequests/{requestId}/{status}": {
      "post": {
        "tags": [
          "LockboxRequests"
        ],
        "operationId": "UpdateLockboxRequestStatus",
        "summary": "Approves/Denies the Lockbox request .",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productType",
            "description": "The Product type.",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "CDS",
              "PowerBI"
            ]
          },
          {
            "in": "path",
            "name": "requestId",
            "description": "The Request Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "status",
            "description": "The lockbox request status.",
            "required": true,
            "type": "string",
            "enum": [
              "none",
              "approve",
              "deny"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LockboxRequestDto"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/governance/teamsEnvironmentInactivityJobPolicies": {
      "get": {
        "tags": [
          "TeamsEnvironmentInactivityJobsPolicies"
        ],
        "operationId": "ListTeamsEnvironmentInactivityJobPolicies",
        "summary": "Get tenant policy by tenant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityJobPolicyResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/governance/teamsEnvironmentInactivityPolicies": {
      "get": {
        "tags": [
          "TeamsEnvironmentInactivityPolicies"
        ],
        "operationId": "ListTeamsEnvironmentInactivityPolicies",
        "summary": "Gets Teams environment inactivity policies for a tenant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "getDefaultIfNotExist",
            "description": "The flag to indicate whether to return default policy or not.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponseResponseWithOdataContinuation"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamsEnvironmentInactivityPolicies"
        ],
        "operationId": "CreateTeamsEnvironmentInactivityPolicy",
        "summary": "Creates the Teams environment inactivity policy.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The policy.",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
            }
          }
        }
      }
    },
    "/governance/teamsEnvironmentInactivityPolicies/{policyId}": {
      "get": {
        "tags": [
          "TeamsEnvironmentInactivityPolicies"
        ],
        "operationId": "GetTeamsEnvironmentInactivityPolicy",
        "summary": "Gets the Teams environment inactivity policy.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "policyId",
            "description": "The policy id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TeamsEnvironmentInactivityPolicies"
        ],
        "operationId": "UpdateTeamsEnvironmentInactivityPolicy",
        "summary": "Updates the Teams environment inactivity policy.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "The tenant id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The policy.",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
            }
          }
        }
      }
    },
    "/governance/tenantPolicyConfigurations": {
      "get": {
        "tags": [
          "TenantPolicyConfigurations"
        ],
        "operationId": "ListTenantPolicyConfigurations",
        "summary": "Gets tenant policy configurations.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantPolicyWebAPIConfigurationResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "ContainerDto": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "LockboxAppliesForValue": {
      "enum": [
        "All",
        "This"
      ],
      "type": "string"
    },
    "LockboxEnabledState": {
      "required": [
        "appliesFor",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LockboxEnabledValue"
        },
        "appliesFor": {
          "$ref": "#/definitions/LockboxAppliesForValue"
        }
      }
    },
    "LockboxEnabledValue": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "LockboxEnvironmentLinkedResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/LockboxEnvironmentLinkedResourceType"
        }
      }
    },
    "LockboxEnvironmentLinkedResourceType": {
      "enum": [
        "Organization",
        "BCEnvironment",
        "FnOEnvironment"
      ],
      "type": "string"
    },
    "LockboxOperationRequest": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string"
        },
        "operatorUserClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LockboxOperatorUserClaim"
          }
        },
        "serviceTreeId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "operationName": {
          "type": "string"
        },
        "operationParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "isBreakGlass": {
          "type": "boolean"
        },
        "environmentLinkedResource": {
          "$ref": "#/definitions/LockboxEnvironmentLinkedResource"
        }
      }
    },
    "LockboxOperationValidationDecision": {
      "enum": [
        "Allowed",
        "NotAllowed"
      ],
      "type": "string"
    },
    "LockboxOperationValidationDecisionReasonCode": {
      "enum": [
        "NotSpecified",
        "MissingEnvironmentId",
        "EnvironmentNotFound",
        "MissingOperatorUserClaims",
        "MissingOperatorUserPrincipalName",
        "LockboxRequestNotFound",
        "LockboxRequestNotApproved"
      ],
      "type": "string"
    },
    "LockboxOperationValidationResult": {
      "type": "object",
      "properties": {
        "decision": {
          "$ref": "#/definitions/LockboxOperationValidationDecision"
        },
        "reasonCode": {
          "$ref": "#/definitions/LockboxOperationValidationDecisionReasonCode"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "LockboxOperatorUserClaim": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "LockboxPolicyDto": {
      "required": [
        "lockboxEnabledState",
        "productType",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "productType": {
          "$ref": "#/definitions/LockboxProductType"
        },
        "container": {
          "$ref": "#/definitions/ContainerDto"
        },
        "lockboxEnabledState": {
          "$ref": "#/definitions/LockboxEnabledState"
        },
        "lastUpdatedAt": {
          "type": "string"
        },
        "tenantPolicy": {
          "$ref": "#/definitions/LockboxPolicyDto"
        },
        "containerPolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LockboxPolicyDtoResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LockboxPolicyDto"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "LockboxProductType": {
      "enum": [
        "None",
        "CDS",
        "PowerBI"
      ],
      "type": "string"
    },
    "LockboxRequestAction": {
      "enum": [
        "none",
        "approve",
        "deny"
      ],
      "type": "string"
    },
    "LockboxRequestDto": {
      "required": [
        "accessPeriod",
        "createdTime",
        "expirationTime",
        "productType",
        "status",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "productType": {
          "$ref": "#/definitions/LockboxProductType"
        },
        "container": {
          "$ref": "#/definitions/ContainerDto"
        },
        "createdTime": {
          "type": "string"
        },
        "expirationTime": {
          "type": "string"
        },
        "accessPeriod": {
          "type": "string"
        },
        "accessExpirationTime": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string"
        },
        "actionBy": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/LockboxRequestStatus"
        },
        "supportRequest": {
          "$ref": "#/definitions/SupportRequestDto"
        },
        "subscriptionId": {
          "type": "string"
        },
        "justification": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/LockboxRequestSource"
        }
      }
    },
    "LockboxRequestDtoResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LockboxRequestDto"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "LockboxRequestSource": {
      "enum": [
        "AzureLockbox",
        "PowerPlatform"
      ],
      "type": "string"
    },
    "LockboxRequestStatus": {
      "enum": [
        "None",
        "LockboxRequestReceived",
        "FetchedLockboxRequestDetails",
        "FetchedProductType",
        "TenantIdNotFound",
        "FetchedTenantContainerInformation",
        "SentLockboxRequestForCustomerApproval",
        "LockboxRequestReceivedForCustomerApproval",
        "LockboxPolicyEnabled",
        "LockboxPolicyDisabled",
        "FetchedApproversInformation",
        "AutoApprovedAsLockboxPolicyDisabled",
        "ApprovalActionRequested",
        "ApprovalReceived",
        "DenialReceived",
        "Approved",
        "Denied",
        "LockboxRequestExpired",
        "LockboxAccessExpired",
        "LockboxRequestInError",
        "AutoDenied",
        "AutoApprovedAsTenantIdNotFound",
        "FailureInSendingCustomerApprovalOrDenial",
        "CdsContainerIdNotFound",
        "AutoApprovedAsCdsContainerIdNotFound",
        "RequestProcessingFailed"
      ],
      "type": "string"
    },
    "SupportRequestDto": {
      "required": [
        "id",
        "source"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "ExemptedResource": {
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExemptedResourceInfo"
          }
        }
      }
    },
    "ExemptedResourceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "NotificationInfo": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalContacts": {
          "type": "boolean"
        }
      }
    },
    "TeamsEnvironmentInactivityJobPolicy": {
      "type": "object",
      "properties": {
        "jobSettings": {
          "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyJobSetting"
        },
        "tenantId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "exemptedResources": {
          "$ref": "#/definitions/ExemptedResource"
        }
      }
    },
    "TeamsEnvironmentInactivityJobPolicyResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityJobPolicy"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyConfiguration": {
      "type": "object",
      "properties": {
        "durations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyNotificationDurations"
          }
        },
        "inactivityDaysBeforeDisablingDefault": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyJobSetting": {
      "type": "object",
      "properties": {
        "allowedSku": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minEnforcementDate": {
          "format": "date-time",
          "type": "string"
        },
        "firstDisableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "secondDisableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "disableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "firstDeleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "secondDeleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "deleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "notificationInfo": {
          "$ref": "#/definitions/NotificationInfo"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyNotificationDurations": {
      "type": "object",
      "properties": {
        "firstDisableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "secondDisableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "disableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "firstDeleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "secondDeleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "deleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyWebResponse": {
      "type": "object",
      "properties": {
        "isDefault": {
          "type": "boolean"
        },
        "policyId": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "disableDaysBeforeDeletion": {
          "format": "int32",
          "type": "integer"
        },
        "inactivityDaysBeforeDisabling": {
          "format": "int32",
          "type": "integer"
        },
        "exemptedResources": {
          "$ref": "#/definitions/ExemptedResource"
        },
        "notificationRecipientRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyWebResponseResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TenantPolicyWebAPIConfiguration": {
      "type": "object",
      "properties": {
        "teamsEnvironmentInactivity": {
          "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyConfiguration"
        }
      }
    },
    "TenantPolicyWebAPIConfigurationResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantPolicyWebAPIConfiguration"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2"
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}