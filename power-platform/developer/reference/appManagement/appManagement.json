{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Power Platform REST API",
    "description": "Unified API for all administrative capabilities in Microsoft Power Platform",
    "version": "2021-10-01-preview"
  },
  "host": "api.powerplatform.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/appmanagement/applicationPackages": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get list of Application Packages that are available for a tenant",
        "description": "Get list of available application packages for a tenant",
        "operationId": "GetTenantApplicationPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2021-10-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantApplicationPackageContinuationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/appmanagement/environments/{environmentId}/applicationPackages": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get list of Application Packages that are available for install in a target environment.",
        "description": "Get list of Application Packages that are relevant in the context of a target environment. Client can filter the Application Packages based on Install State (NotInstalled, Installed, All) and any other response parameters utilizing standard OData capabilities",
        "operationId": "GetEnvironmentApplicationPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "appInstallState",
            "description": "Application Package Install State",
            "type": "string",
            "enum": [
              "All",
              "Installed",
              "NotInstalled"
            ]
          },
          {
            "in": "query",
            "name": "lcid",
            "description": "Application Package Supported Language Id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2021-10-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationPackageContinuationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/appmanagement/environments/{environmentId}/applicationPackages/{uniqueName}/install": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Trigger installation of an application package based on the package unique name into a target environment.",
        "description": "Trigger installation of an application package based on the package unique name to be installed in a target environment. Client can also include custom payload when requesting installation of an application package.",
        "operationId": "InstallApplicationPackage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "uniqueName",
            "description": "Package Unique Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2021-10-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to be sent during installation of the Package",
            "schema": {
              "$ref": "#/definitions/TpsInstallRequestPayload"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstancePackage"
            }
          }
        }
      }
    },
    "/appmanagement/environments/{environmentId}/operations/{operationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get the polling status for a previously triggered installation",
        "description": "Get the polling status to check on the progress of a previously triggered installation based on the operation ID",
        "operationId": "GetApplicationPackageInstallStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2021-10-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstancePackageOperationPollingResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationInstallState": {
      "enum": [
        "All",
        "Installed",
        "NotInstalled"
      ],
      "type": "string"
    },
    "ApplicationPackage": {
      "required": [
        "id",
        "uniqueName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "localizedDescription": {
          "maxLength": 1000,
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "applicationDescription": {
          "type": "string"
        },
        "singlePageApplicationUrl": {
          "type": "string"
        },
        "publisherName": {
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "type": "string"
        },
        "learnMoreUrl": {
          "type": "string"
        },
        "platformMinVersion": {
          "type": "string"
        },
        "platformMaxVersion": {
          "type": "string"
        },
        "customHandleUpgrade": {
          "type": "boolean"
        },
        "instancePackageId": {
          "format": "uuid",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/InstancePackageState"
        },
        "catalogVisibility": {
          "$ref": "#/definitions/CatalogVisibility"
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastError": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "startDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "endDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "supportedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationPackageContinuationResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackage"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "ApplicationVisibility": {
      "enum": [
        "None",
        "CrmAdminCenter",
        "BapAdminCenter",
        "OneAdminCenter",
        "All"
      ],
      "type": "string"
    },
    "CatalogVisibility": {
      "enum": [
        "None",
        "AdminCenter",
        "Teams",
        "All"
      ],
      "type": "string"
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "errorName": {
          "type": "string"
        },
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "InstancePackage": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "packageId": {
          "format": "uuid",
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "applicationDescription": {
          "type": "string"
        },
        "singlePageApplicationUrl": {
          "type": "string"
        },
        "publisherName": {
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "type": "string"
        },
        "packageUniqueName": {
          "type": "string"
        },
        "packageVersion": {
          "type": "string"
        },
        "localizedDescription": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "learnMoreUrl": {
          "type": "string"
        },
        "termsOfServiceBlobUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastOperation": {
          "$ref": "#/definitions/InstancePackageOperation"
        },
        "customHandleUpgrade": {
          "type": "boolean"
        }
      }
    },
    "InstancePackageOperation": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/InstancePackageState"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "errorDetails": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "statusMessage": {
          "type": "string"
        },
        "instancePackageId": {
          "format": "uuid",
          "type": "string"
        },
        "operationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "InstancePackageOperationPollingResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/InstancePackageOperationStatus"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "statusMessage": {
          "type": "string"
        },
        "operationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "InstancePackageOperationStatus": {
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string"
    },
    "InstancePackageState": {
      "enum": [
        "None",
        "Installed",
        "Uninstalled",
        "InstallRequested",
        "UninstallRequested",
        "InstallFailed",
        "UninstallFailed",
        "Installing",
        "Uninstalling",
        "InstallScheduled",
        "InstallRetrying",
        "TemplateInstalled"
      ],
      "type": "string"
    },
    "TenantApplicationPackage": {
      "type": "object",
      "properties": {
        "uniqueName": {
          "type": "string"
        },
        "localizedDescription": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "applicationDescription": {
          "type": "string"
        },
        "publisherName": {
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "type": "string"
        },
        "learnMoreUrl": {
          "type": "string"
        },
        "catalogVisibility": {
          "$ref": "#/definitions/CatalogVisibility"
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastError": {
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "TenantApplicationPackageContinuationResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantApplicationPackage"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TpsInstallRequestPayload": {
      "type": "object",
      "properties": {
        "payloadValue": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize?resource=https://api.powerplatform.com",
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token",
      "description": "Azure Active Directory OAuth2"
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}